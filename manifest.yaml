apiVersion: v1
kind: Pod
metadata:
  labels:
    appClusterIpService: appClusterIpService
  name: flask-app
  namespace: default
spec:
  containers:
  - image: 52pbailey/task2-flask-app
    imagePullPolicy: IfNotPresent
    name: flask-app
    env: 
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysqlpassword
          key: mysqlrootpassword
    - name: YOUR_NAME
      valueFrom:
        secretKeyRef:
          name: yourname
          key: yourname
---
apiVersion: v1
kind: Service
metadata:
  labels:
    appClusterIpService: appClusterIpService
  name: flask-app
spec:
  ports: 
  - port: 5000
  selector:
    appClusterIpService: appClusterIpService
  type: ClusterIP
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    mysqlclusterIpService: mysqlclusterIpService
  name: mysql
  namespace: default
spec:
  containers:
  - image: 52pbailey/task2-db
    imagePullPolicy: Always
    name: db
    env: 
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysqlpassword
          key: mysqlrootpassword
---
apiVersion: v1
kind: Service
metadata:
  labels:
    mysqlclusterIpService: mysqlclusterIpService
  name: mysql
spec:
  type: ClusterIP
  selector:
    mysqlclusterIpService: mysqlclusterIpService
  ports:
    - port: 3306
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    loadBalancer: loadBalancer
  name: nginx
  namespace: default
spec:
  volumes:
    - name: nginx-vol
      configMap: 
        name: nginx-config
  containers:
  - image: nginx:alpine
    imagePullPolicy: IfNotPresent
    name: nginx
    volumeMounts:
      - name: nginx-vol
        mountPath: /etc/nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    loadBalancer: loadBalancer
  name: nginx
spec:
  type: LoadBalancer
  selector:
    loadBalancer: loadBalancer
  ports:
    - port: 80
      protocol: TCP