apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-replicas
  labels:
    task: task2
spec:
  strategy:
    rollingUpdate:
      maxSurge: 33%
      maxUnavailable: 33%
  replicas: 3
  selector: 
    matchLabels: 
      app: flask-app
  template: 
    metadata:
      labels:
        app: flask-app
    spec:
      metadata:
        labels:
          appClusterIpService: appClusterIpService
      containers:
      - image: 52pbailey/task2-flask-app:v{{version}}
        name: flask-app
        env: 
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysqlpassword
              key: mysqlrootpassword
---
apiVersion: v1
kind: Service
metadata:
  labels:
    appClusterIpService: appClusterIpService
  name: flask-app
spec:
  ports: 
  - port: 5000
  selector:
    appClusterIpService: appClusterIpService
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-replicas
  labels:
    task: task2
spec:
  strategy:
    rollingUpdate:
      maxSurge: 33%
      maxUnavailable: 33%
  replicas: 3
  selector: 
    matchLabels: 
      mysql: mysql
  template: 
    metadata:
      labels:
        mysql: mysql
    spec:
      metadata:
        labels:
          mysqlclusterIpService: mysqlclusterIpService
      containers:
      - image: 52pbailey/task2-flask-app:v{{version}}
        name: flask-app
        env: 
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysqlpassword
              key: mysqlrootpassword
---
apiVersion: v1
kind: Service
metadata:
  labels:
    mysqlclusterIpService: mysqlclusterIpService
  name: mysql
spec:
  type: ClusterIP
  selector:
    mysqlclusterIpService: mysqlclusterIpService
  ports:
    - port: 3306
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    loadBalancer: loadBalancer
  name: nginx
  namespace: default
spec:
  volumes:
    - name: nginx-vol
      configMap: 
        name: nginx-config
  containers:
  - image: nginx:alpine
    imagePullPolicy: IfNotPresent
    name: nginx
    volumeMounts:
      - name: nginx-vol
        mountPath: /etc/nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    loadBalancer: loadBalancer
  name: nginx
spec:
  type: LoadBalancer
  selector:
    loadBalancer: loadBalancer
  ports:
    - port: 80
      protocol: TCP