apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-replicas
  labels:
    task: task2
spec:
  strategy:
    rollingUpdate:
      maxSurge: 33%
      maxUnavailable: 33%
  replicas: 3
  selector: 
    matchLabels: 
      app: flask-app
  template: 
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: 52pbailey/task2-flask-app:v{{version}}
        name: flask-app
        env: 
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysqlpassword
              key: mysqlrootpassword
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-app
  name: flask-app
spec:
  ports: 
  - port: 5000
  selector:
    app: flask-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-replicas
  labels:
    mysqldb: mysql
spec:
  strategy:
    rollingUpdate:
      maxSurge: 33%
      maxUnavailable: 33%
  replicas: 3
  selector: 
    matchLabels: 
      mysqldb: mysql
  template: 
    metadata:
      labels:
        mysqldb: mysql
    spec:
      containers:
      - image: 52pbailey/task2-db:v{{version}}
        name: mysql
        env: 
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysqlpassword
              key: mysqlrootpassword
---
apiVersion: v1
kind: Service
metadata:
  labels:
    mysqldb: mysql
  name: mysql
spec:
  type: ClusterIP
  selector:
    mysqldb: mysql
  ports:
    - port: 3306
---
apiVersion: v1
kind: Deployment
metadata:
  name: nginx
  labels: 
    nginx: nginx
spec:
  replicas: 3
  selector:
    matchLabels: 
      nginx: nginx
  strategy:
    rollingUpdate:
      maxSurge: 33%
      maxUnavailable: 33%
  template:
    metadata:
      labels:
        nginx: nginx
    spec:
      volumes:
        - name: nginx-vol
          configMap: 
            name: nginx-config
      containers:
      - image: nginx:alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        volumeMounts:
          - name: nginx-vol
            mountPath: /etc/nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    nginx: nginx
  name: nginx
spec:
  type: LoadBalancer
  selector:
    nginx: nginx
  ports:
    - port: 80
      protocol: TCP